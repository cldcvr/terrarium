// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	exec "os/exec"

	mock "github.com/stretchr/testify/mock"
)

// Commander is an autogenerated mock type for the Commander type
type Commander struct {
	mock.Mock
}

// Run provides a mock function with given fields: _a0
func (_m *Commander) Run(_a0 *exec.Cmd) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*exec.Cmd) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCommander creates a new instance of Commander. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCommander(t interface {
	mock.TestingT
	Cleanup(func())
}) *Commander {
	mock := &Commander{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
