# Copyright (c) CloudCover
# SPDX-License-Identifier: Apache-2.0

version: '3'

networks:
  terrarium:
    driver: bridge
    name: ${TER_DOCKER_NETWORK:-terrarium}
    external: ${TER_DOCKER_NETWORK_EXTERNAL:-false}

volumes:
  postgres_data:
    name: tr_postgres_data

secrets:
  netrc:
    file: $HOME/.netrc

services:
  postgres:
    image: postgres:12
    container_name: postgres
    networks: [terrarium]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${TR_DB_PASSWORD:-}
      POSTGRES_DB: ${TR_DB_NAME:-cc_terrarium}
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      interval: 3s
      timeout: 1s
      retries: 3
    volumes:
      - ./data:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  terrarium-api:
    image: cldcvr/terrarium-api
    container_name: terrarium-api
    networks: [terrarium]
    build:
      context: .
      target: api-runner
      cache_from:
        - "cldcvr/terrarium-api:latest"
    environment:
      # DB config
      TR_DB_HOST: ${TR_DB_HOST:-postgres}
      TR_DB_USER: ${TR_DB_USER:-}
      TR_DB_PORT: ${TR_DB_PORT:-}
      TR_DB_SSL_MODE: ${TR_DB_SSL_MODE:-}
      TR_DB_PASSWORD: ${TR_DB_PASSWORD:-}

      # Logging config
      TR_LOG_LEVEL: ${TR_LOG_LEVEL:-trace}
      TR_LOG_FORMAT: ${TR_LOG_FORMAT:-text}
      TR_LOG_PRETTY_PRINT: ${TR_LOG_PRETTY_PRINT:-true}
    ports:
      - ${TR_SERVER_HTTP_PORT:-3000}:3000
    depends_on:
      postgres:
        condition: service_healthy

  farm-harvester:
    image: cldcvr/terrarium-farm-harvester
    container_name: terrarium-farm-harvester
    networks: [terrarium]
    build:
      context: .
      target: farm-harvester
      args:
        TERRAFORM_VERSION: ${TERRAFORM_VERSION:-latest}
      cache_from:
        - "cldcvr/terrarium-farm-harvester:latest"
    secrets:
      - source: netrc
        target: /root/.netrc
    environment:
      # DB config
      TR_DB_TYPE: ${TR_DB_TYPE:-postgres}
      TR_DB_HOST: ${TR_DB_HOST:-postgres}
      TR_DB_USER: ${TR_DB_USER:-}
      TR_DB_PORT: ${TR_DB_PORT:-}
      TR_DB_SSL_MODE: ${TR_DB_SSL_MODE:-}
      TR_DB_PASSWORD: ${TR_DB_PASSWORD:-}
    volumes:
      - ./examples/farm:/app/farm
    profiles:
      - tooling
    depends_on:
      postgres:
        condition: service_healthy

  terrarium-unit-test:
    image: cldcvr/terrarium-unit-test
    container_name: terrarium-unit-test
    networks: [terrarium]
    build:
      context: .
      target: unit-test
    volumes:
      - ./coverage:/usr/src/app/coverage
    profiles:
      - tooling
    environment:
      # DB config
      TR_DB_HOST: ${TR_DB_HOST:-postgres}
      TR_DB_USER: ${TR_DB_USER:-}
      TR_DB_PORT: ${TR_DB_PORT:-}
      TR_DB_SSL_MODE: ${TR_DB_SSL_MODE:-}
      TR_DB_PASSWORD: ${TR_DB_PASSWORD:-}
    depends_on:
      postgres:
        condition: service_healthy
